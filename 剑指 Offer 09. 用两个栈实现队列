// CQueue is structer

// stack1 is used as queue, stack 2 is handy to help stack1

class CQueue {
public:
    stack<int> stack1, stack2;
    CQueue() {

    }
    
    void appendTail(int value) {
        stack1.push(value);
    }
    
    int deleteHead() {
        if(stack1.empty()) return -1;
        while(!stack1.empty())
        {
            int tmp = stack1.top();
            stack1.pop();
            stack2.push(tmp);
            
        }

        // delete the top one in stack1
        int res = stack2.top();
        stack2.pop();
        while(!stack2.empty())
        {
            int tmp = stack2.top();
            stack2.pop();
            stack1.push(tmp);
            
        }
        return res;
    }
};

/**
 * Your CQueue object will be instantiated and called as such:
 * CQueue* obj = new CQueue();
 * obj->appendTail(value);
 * int param_2 = obj->deleteHead();
 */

