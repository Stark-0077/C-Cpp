思路：
一上来想到hash map  
但没有实现出来  
看了下解答  
发现也可以先排序  
```
class Solution {
public:
    int findRepeatNumber(vector<int>& nums) {
        vector<int> base(nums.size(),0);
        for(int i = 0; i < nums.size(); i++)
            base[nums[i]]++;
        for(int i = 0; i < base.size(); i++)
            if(base[i] >= 2)return i;
        return -1;
    }
};
``` 

for(auto a:b)中b为一个容器，效果是利用a遍历并获得b容器中的每一个值，但是a无法影响到b容器中的元素。  

for(auto &a:b)中加了引用符号，可以对容器中的内容进行赋值，即可通过对a赋值来做到容器b的内容填充。  

```
// hash map solution
class Solution {
public:
    int findRepeatNumber(vector<int>& nums) {
        
        unordered_map<int,int> map;
        for(auto& num:nums)
        {
            map[num]++;
            if(map[num]>1)
                return num;
        }
        return 0;
          
    }
};
```
